"use strict";(self.webpackChunkreact_native_pitch_detector_docs=self.webpackChunkreact_native_pitch_detector_docs||[]).push([[827],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2175:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={},c="Usage",l={unversionedId:"usage",id:"usage",title:"Usage",description:"API",source:"@site/docs/usage.md",sourceDirName:".",slug:"/usage",permalink:"/react-native-pitch-detector/docs/usage",draft:!1,editUrl:"https://github.com/1fabiopereira/react-native-pitch-detector/edit/master/website/docs/usage.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/react-native-pitch-detector/docs/installation"},next:{title:"Playground",permalink:"/react-native-pitch-detector/docs/playground"}},p={},u=[{value:"API",id:"api",level:3},{value:"Permissions",id:"permissions",level:3}],d={toc:u};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"api"},"API"),(0,a.kt)("p",null,"Below you can see small code snippet that shows how to import and use the main functions."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import { PitchDetector } from 'react-native-pitch-detector';\n\n// To start recording\nawait PitchDetector.start(); // Promise<void>\n\n// To stop recording\nawait PitchDetector.stop(); // Promise<void>\n\n// To get current status\nawait PitchDetector.isRecording(); // Promise<true | false>\n\n// To listener results\nconst subscription = PitchDetector.addListener(console.log) // { frequency: 440.14782, tone: \"C#\" }\n\n// To stop listen results\nPitchDetector.removeListener()\n\n")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"You can see a complete implementation at ",(0,a.kt)("a",{parentName:"p",href:"/react-native-pitch-detector/docs/playground"},"Playground"),".")),(0,a.kt)("h3",{id:"permissions"},"Permissions"),(0,a.kt)("p",null,"To use microphone we need give permission to our app, for that we use a ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/zoontek/react-native-permissions"},"react-native-permissions")," library."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"}," yarn add react-native-permissions\n")),(0,a.kt)("p",null,"Or using npm:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"npm install react-native-permissions\n")),(0,a.kt)("p",null,"After that, on ",(0,a.kt)("inlineCode",{parentName:"p"},"package.json")," file add de following lines:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"reactNativePermissionsIOS": [\n    "Microphone"\n]\n')),(0,a.kt)("p",null,"For iOS you need edit ",(0,a.kt)("inlineCode",{parentName:"p"},"Info.plist"),", add:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<key>NSMicrophoneUsageDescription</key>\n<string>Perform pitch detection</string>\n")),(0,a.kt)("p",null,"Lastly for iOS you need execute:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"(cd ios && pod install)\n")),(0,a.kt)("p",null,"For Android you need change ",(0,a.kt)("inlineCode",{parentName:"p"},"AndroidManifest.xml"),", and add:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<uses-permission android:name="android.permission.RECORD_AUDIO" />\n')),(0,a.kt)("p",null,"and finally recompile your project both platforms."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\ud83d\udca1 In future the idea is remove react-native-permission dependency and develop in house permission manager.")))}m.isMDXComponent=!0}}]);